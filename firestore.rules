rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isStartup() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'startup';
    }

    function isMentor() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'mentor';
    }

    function isInvestor() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'investor';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false; // Prevent user deletion
    }

    // Startups collection
    match /startups/{startupId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(startupId) && isStartup();
      allow update: if isAuthenticated() && isOwner(startupId);
      allow delete: if false; // Prevent startup deletion
    }

    // Mentors collection
    match /mentors/{mentorId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(mentorId) && isMentor();
      allow update: if isAuthenticated() && isOwner(mentorId);
      allow delete: if false; // Prevent mentor deletion
    }

    // Investors collection
    match /investors/{investorId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(investorId) && isInvestor();
      allow update: if isAuthenticated() && isOwner(investorId);
      allow delete: if false; // Prevent investor deletion
    }
  }
} 