rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Allow users to create their own profile
    match /users/{userId} {
      allow create: if isAuthenticated() && isOwner(userId);
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Startup profiles
    match /startups/{userId} {
      allow create: if isAuthenticated() && isOwner(userId);
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Mentor profiles
    match /mentors/{userId} {
      allow create: if isAuthenticated() && isOwner(userId);
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Investor profiles
    match /investors/{userId} {
      allow create: if isAuthenticated() && isOwner(userId);
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Pitch submissions
    match /pitches/{pitchId} {
      allow create: if isAuthenticated() 
                   && request.resource.data.userId == request.auth.uid;
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() 
                   && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() 
                   && resource.data.userId == request.auth.uid;
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 